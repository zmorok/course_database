<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  боковая панель  -->
    <Style x:Key="PanelHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,10,0,5" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <!--  текстовые поля  -->
    <Style x:Key="PanelTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource TextComboBox_BgColor_Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextComboBox_BdBrush_Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Fg_Brush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="10,0,10,10" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <!--  выпадающие списки  -->
    <Style x:Key="PanelComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource TextComboBox_BgColor_Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextComboBox_BdBrush_Brush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="10,0,10,10" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <!--  кнопки панели  -->
    <Style x:Key="PanelButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Button_BgColor_Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Button_FgColor_Brush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="10,5,10,0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button_IsOver_BgColor_Brush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Button_IsPressed_BgColor_Brush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource Button_IsEnabled_BgColor_Brush}" />
                            <Setter Property="Foreground" Value="{DynamicResource Button_IsEnabled_FgColor_Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  границы  -->
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BorderAndStackPanel_BgColor_Brush}" />
        <Setter Property="CornerRadius" Value="16" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="0"
                            To="1"
                            Duration="0:0:0.4" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--  задняя часть боковой панели  -->
    <Style x:Key="StackPanelStyle" TargetType="StackPanel">
        <Setter Property="Background" Value="{DynamicResource BorderAndStackPanel_BgColor_Brush}" />
        <Setter Property="Margin" Value="10" />
    </Style>

    <!--  список данных  -->
    <Style x:Key="ListBoxDataStyle" TargetType="ListBox">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style x:Key="ListBoxItemBorderStyle" TargetType="Border">
        <Setter Property="Width" Value="200" />
        <Setter Property="MinWidth" Value="180" />
        <Setter Property="MaxWidth" Value="250" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Background" Value="{DynamicResource ListBox_BgColor_Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ListBox_BdBrushColor_Brush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="10" />

        <!--    -->
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <!--    -->
        <Style.Triggers>
            <!--  триггер при загрузке  -->
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="0"
                            To="1"
                            Duration="0:0:0.4" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <!--  триггер при наведении на элемент  -->
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                            To="1.1"
                            Duration="0:0:0.2" />
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                            To="1.1"
                            Duration="0:0:0.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                            To="1"
                            Duration="0:0:0.2" />
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                            To="1"
                            Duration="0:0:0.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>


    </Style>

    <Style x:Key="ListBoxItemStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ListBoxItem_FgColor_Brush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />

    </Style>

    <!--
        System.Windows.Data Error: 4 :
        Cannot find source for binding with reference
        'RelativeSource FindAncestor, AncestorType='System.Windows.Controls.ItemsControl',
        AncestorLevel='1''. BindingExpression:Path=VerticalContentAlignment; DataItem=null;
        target element is 'ListBoxItem' (Name=''); target property is 'VerticalContentAlignment'
        (type 'VerticalAlignment')
    -->

    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <!--  This trigger is needed, because RelativeSource binding can only succeeds if the current ListBoxItem is already connected to its visual parent  -->
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--  профиль анимация  -->
    <Style x:Key="ProfileAnimation" TargetType="Grid">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="0"
                            To="1"
                            Duration="0:0:0.4" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ProfileTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource Secondary_BgColor_Brush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text_FgColor_Brush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="0,5,0,10" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border_BgColor_Brush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

</ResourceDictionary>